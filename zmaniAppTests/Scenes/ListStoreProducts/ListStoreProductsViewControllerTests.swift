//
//  ListStoreProductsViewControllerTests.swift
//  zmaniApp
//
//  Created by Irakli on 11/18/19.
//  Copyright (c) 2019 Irakli. All rights reserved.
//
//  This file was generated by the Clean Swift Xcode Templates so
//  you can apply clean architecture to your iOS and Mac projects,
//  see http://clean-swift.com
//

@testable import zmani
import XCTest

class ListStoreProductsViewControllerTests: XCTestCase
{
  // MARK: Subject under test
  
  var sut: ListStoreProductsViewController!
  var window: UIWindow!
  
  // MARK: Test lifecycle
  
  override func setUp()
  {
    super.setUp()
    window = UIWindow()
    setupListStoreProductsViewController()
  }
  
  override func tearDown()
  {
    window = nil
    super.tearDown()
  }
  
  // MARK: Test setup
  
  func setupListStoreProductsViewController()
  {
    let bundle = Bundle.main
    let storyboard = UIStoryboard(name: "Main", bundle: bundle)
    sut = storyboard.instantiateViewController(withIdentifier: "ListStoreProductsViewController") as! ListStoreProductsViewController
  }
  
  func loadView()
  {
    window.addSubview(sut.view)
    RunLoop.current.run(until: Date())
  }
  
  // MARK: Test doubles
  
  class ListStoreProductsBusinessLogicSpy: ListStoreProductsBusinessLogic
  {
    func fetchStoreProducts(request: ListStoreProducts.FetchStoreProducts.Request) {
        
    }
    
    var doSomethingCalled = false
    
    func doSomething(request: ListStoreProducts.FetchStoreProducts.Request)
    {
      doSomethingCalled = true
    }
  }
  
  // MARK: Tests
  
//  func testShouldDoSomethingWhenViewIsLoaded()
//  {
//    // Given
//    let spy = ListStoreProductsBusinessLogicSpy()
//    sut.interactor = spy
//    
//    // When
//    loadView()
//    
//    // Then
//    XCTAssertTrue(spy.doSomethingCalled, "viewDidLoad() should ask the interactor to do something")
//  }
  
  func testDisplaySomething()
  {
    // Given
//    let viewModel = ListStoreProducts.FetchStoreProducts.ViewModel()
    
    // When
    loadView()
//    sut.displaySomething(viewModel: viewModel)
    
    // Then
    //XCTAssertEqual(sut.nameTextField.text, "", "displaySomething(viewModel:) should update the name text field")
  }
}
